// Generated by CoffeeScript 1.3.3
(function() {
  var BASE_URL, startup,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  BASE_URL = "index.html";

  startup = function() {
    var count, ready, script, script_tag, scripts, _i, _len, _results;
    if (window.encipher) {
      return window.encipher.startup();
    }
    scripts = ['encipher.js', 'AES.js', 'sha1.js', 'pbkdf2.js', 'base64.js', 'utf8.js'];
    if (typeof jQuery === "undefined") {
      scripts.push('jquery.min.js');
    }
    count = scripts.length;
    ready = function() {
      count -= 1;
      if (count === 0) {
        if (__indexOf.call(scripts, 'jquery.min.js') >= 0) {
          $.noConflict();
        }
        jQuery.expr[':'].focus = function(elem) {
          return elem === document.activeElement && (elem.type || elem.href);
        };
        window.encipher = new Encipher(BASE_URL);
        return window.encipher.startup();
      }
    };
    _results = [];
    for (_i = 0, _len = scripts.length; _i < _len; _i++) {
      script = scripts[_i];
      script_tag = document.createElement('script');
      script_tag.setAttribute("type", "text/javascript");
      script_tag.setAttribute("src", BASE_URL + "/javascripts/" + script);
      script_tag.onload = ready;
      script_tag.onreadystatechange = function() {
        if (this.readyState === 'complete' || this.readyState === 'loaded') {
          return ready();
        }
      };
      _results.push(document.getElementsByTagName("head")[0].appendChild(script_tag));
    }
    return _results;
  };

  startup();

}).call(this);
